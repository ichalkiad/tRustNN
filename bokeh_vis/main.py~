from bokeh.plotting import figure, show, output_file
from bokeh.io import output_notebook, show, curdoc
from bokeh.models import ColumnDataSource
from data_format import get_data
from pprint import pprint
import numpy as np
from bokeh.models.widgets import Select
from sklearn.decomposition import PCA
import random

#Get trained model parameters: weights and gate values
keys,data = get_data("/home/yannis/Desktop/tRustNN/bokeh_vis/data/model.json")


def get_data(N):
    return dict(x=random(size=N), y=random(size=N), r=random(size=N) * 0.03)

source = ColumnDataSource(data=get_data(200))


fig = figure(tools="", toolbar_location=None)
r = fig.circle(x='x', y='y', radius=0.1, source=source,
             color="navy", alpha=0.6, line_color="white")

lstm_layers = [l for l in keys if "lstm" in keys]
select = Select(title="LSTM layer", value="lstm", options=lstm_layers)

def update_layer(attrname, old, new):
    d = data[select.value]
    pca = PCA(n_components=2)
    x_pca = pca.fit_transform(d)
    r.source = {'x':x_pca[:,0], 'y':x_pca[:,1]}
select.on_change('value', update_layer)

